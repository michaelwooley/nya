[tool.poetry]
name = "nya"
version = "0.0.1"
description = "No, you're awesome. Python side."
authors = ["Michael Wooley <fwm.wooley@gmail.com>"]
repository = "https://github.com/michaelwooley/nya"
documentation = "https://michaelwooley.github.io/nya/"
readme = "README.md"
packages = [{ include = "nya" }]

[tool.poetry.dependencies]
python = ">=3.10,<4.0"
pydantic = {version = "^1.10.4", extras = ["email", "dotenv"]}
requests = "^2.28.1"
requests-cache = "^0.9.7"
pygithub = "^1.57"

[tool.poetry.group.dev.dependencies]
pytest = "^7.2.0"
pytest-cov = "^4.0.0"
deptry = "^0.6.4"
mypy = "^0.981"
pre-commit = "^2.20.0"
tox = "^3.25.1"

[tool.poetry.group.docs.dependencies]
mkdocs = "^1.4.2"
mkdocs-material = "^8.5.10"
mkdocstrings = { extras = ["python"], version = "^0.19.0" }

[tool.poetry.group.experiments.dependencies]
# For fiddling around in local dev env.
jupyterlab = "^3.5.2"
ipython = "^8.8.0"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.black]
line-length = 120
target-version = ['py310']
preview = true

[tool.isort]
profile = "black"

[tool.mypy]
files = ["nya"]
disallow_untyped_defs = "True"
disallow_any_unimported = "True"
no_implicit_optional = "True"
check_untyped_defs = "True"
warn_return_any = "True"
warn_unused_ignores = "True"
show_error_codes = "True"

[tool.coverage.report]
skip_empty = true

[tool.coverage.run]
branch = true
source = ["nya"]
